generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  anonyName        String         @unique
  email            String         @unique
  id               String         @id @default(uuid())
  emergencyContact String
  createdAt        DateTime       @default(now())
  dateOfBirth      String
  password         String
  refreshToken     String?
  surveyDays       DateTime
  alerts           Alert[]
  comments         Comment[]
  messages         Message[]
  posts            Post[]
  surveys          Survey[]
  chatRooms        ChatRoom[]     @relation("ChatRoomUsers")
  likedPosts       Post[]         @relation("PostLikes")
  notifications    Notification[]
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  flagged   Boolean   @default(false)
  image     String?
  createdAt DateTime  @default(now())
  authorId  String
  likes     Int       @default(0)
  comments  Comment[]
  author    User      @relation(fields: [authorId], references: [id])
  likedBy   User[]    @relation("PostLikes")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  postId    String
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Survey {
  id        String   @id @default(uuid())
  userId    String
  responses String
  score     Int
  createdAt DateTime @default(now())
  alert     Alert?
  user      User     @relation(fields: [userId], references: [id])
}

model Alert {
  id            String   @id @default(uuid())
  userId        String
  surveyId      String?  @unique
  createdAt     DateTime @default(now())
  alertSent     Boolean  @default(false)
  contactMethod String
  survey        Survey?  @relation(fields: [surveyId], references: [id])
  user          User     @relation(fields: [userId], references: [id])
}

model ChatRoom {
  id       String    @id @default(uuid())
  messages Message[]
  users    User[]    @relation("ChatRoomUsers")
}

model Message {
  id         String   @id @default(uuid())
  content    String
  createdAt  DateTime @default(now())
  userId     String
  chatRoomId String
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}
